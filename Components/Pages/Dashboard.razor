@page "/dashboard"
@using VaxSync.Web.Models
@using Microsoft.AspNetCore.Identity
@using VaxSync.Web.Data
@inject UserManager<ApplicationUser> UserManager
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject ApplicationDbContext _context
@using Microsoft.AspNetCore.Components.Authorization
@using System.Security.Claims

<PageTitle>Dashboard</PageTitle>

<div class="row">
    <!-- Left column -->
    <div class="col-md-9">
        <h3 class="mb-4">Student Summary</h3>

        <div class="alert alert-info text-start" role="alert">
            <h4 class="alert-heading">Welcome, @userName!</h4>
            <p>Today is @DateTime.Now.ToString("dddd, MMMM dd, yyyy"). You have @compliantStudents students up-to-date, and @pendingStudents pending vaccinations.</p>
        </div>

        <div class="row mb-4">
            <div class="col-md-4">
                <div class="card text-white bg-primary mb-3">
                    <div class="card-body">
                        <h5 class="card-title">Total Students</h5>
                        <p class="card-text fs-3">@totalStudents</p>
                    </div>
                </div>
            </div>
            <div class="col-md-4">
                <div class="card text-white bg-success mb-3">
                    <div class="card-body">
                        <h5 class="card-title">Compliant</h5>
                        <p class="card-text fs-3">@compliantStudents</p>
                    </div>
                </div>
            </div>
            <div class="col-md-4">
                <div class="card text-white bg-warning mb-3">
                    <div class="card-body">
                        <h5 class="card-title">Pending</h5>
                        <p class="card-text fs-3">@pendingStudents</p>
                    </div>
                </div>
            </div>
        </div>

        <div class="card mb-4">
            <div class="card-header">Student List</div>
            <div class="card-body">
                <table class="table table-bordered table-hover">
                    <thead class="table-light">
                        <tr>
                            <th>Full Name</th>
                            <th>School ID</th>
                            <th>Date of Birth</th>
                            <th>Status</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var student in students)
                        {
                            <tr>
                                <td>@student.FullName</td>
                                <td>@student.SchoolId</td>
                                <td>@student.DateOfBirth</td>
                                <td>
                                    @if (student.IsCompliant)
                                    {
                                        <span class="badge bg-success">‚úÖ Compliant</span>
                                    }
                                    else
                                    {
                                        <span class="badge bg-danger">‚ùå Pending</span>
                                    }
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>

    <!-- Right column -->
    <div class="col-md-3">
        <div class="card text-center">
            <div class="card-body">
                <img src="https://via.placeholder.com/100" class="rounded-circle mb-3" alt="Student Avatar" />
                <h5 class="card-title">Student Info</h5>
                <p class="card-text">Male, 12 years old</p>
                <hr />
                <p><strong>Grade:</strong> 6th</p>
                <p><strong>MMR:</strong> 1st Dose</p>
                <p><strong>Status:</strong> ‚úÖ Up to Date</p>
                <hr />
                <h6>Next Vaccinations</h6>
                <ul class="list-unstyled">
                    <li>üìå Physical Education</li>
                    <li>üíâ COVID Booster</li>
                    <li>üßò Relaxation Techniques</li>
                </ul>
                <button class="btn btn-outline-primary btn-sm mt-2">Update Info</button>
            </div>
        </div>
    </div>
</div>

@code {
    private List<Student> students = new();
    private int totalStudents = 0;
    private int compliantStudents = 0;
    private int pendingStudents = 0;
    private string userName = "";
    private bool isAdmin = false;
    private bool isNurse = false;


    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = await UserManager.GetUserAsync(authState.User);

        var userClaims = authState.User;

        isAdmin = userClaims.IsInRole("Admin");
        isNurse = userClaims.IsInRole("SchoolNurse");

        if (user is not null)
        {
            userName = user.UserName ?? "User";

            var schoolId = user.SchoolId;

            students = await Task.FromResult(
                _context.Students
                    .Where(s => s.SchoolId == schoolId)
                    .ToList()
            );

            totalStudents = students.Count;
            compliantStudents = students.Count(s => s.IsCompliant);
            pendingStudents = students.Count(s => !s.IsCompliant);
        }
    }
}
