@page "/records"
@using VaxSync.Web.Models

<PageTitle>Search Records</PageTitle>

<h3 class="mb-4">Search Student Vaccine Records</h3>

<div class="mb-3">
    <input class="form-control" placeholder="Enter ID or SSN..." @bind="searchTerm" />
</div>
<button class="btn btn-primary mb-4" @onclick="Search">Search</button>

@if (searchResults != null && searchResults.Any())
{
    <table class="table table-bordered table-striped">
        <thead>
            <tr>
                <th>Name</th>
                <th>School ID</th>
                <th>Vaccine</th>
                <th>Date</th>
                <th>Status</th>
                <th>Details</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var student in searchResults)
            {
                @foreach (var record in student.VaccineRecords)
                {
                    <tr>
                        <td>@student.FullName</td>
                        <td>@student.SchoolId</td>
                        <td>@record.VaccineName</td>
                        <td>@record.Date</td>
                        <td>
                            @if (record.Status == "Compliant")
                            {
                                <span class="text-success">✅</span>
                            }
                            else if (record.Status == "Pending")
                            {
                                <span class="text-warning">⚠️</span>
                            }
                            else
                            {
                                <span class="text-danger">❌</span>
                            }
                        </td>
                        <td>
                            <button class="btn btn-sm btn-outline-secondary" @onclick="() => ShowDetails(student)">View</button>
                        </td>
                    </tr>
                }
            }
        </tbody>
    </table>
}
else if (searched)
{
    <p>No results found.</p>
}

@code {
    private string searchTerm = string.Empty;
    private bool searched = false;
    private List<Student> searchResults = new();

    private void Search()
    {
        searched = true;

        // Simulated search using static data (replace with DB call later)
        var allStudents = new List<Student>
        {
            new Student
            {
                Id = 1,
                FullName = "Ana Rivera",
                SchoolId = "S123",
                DateOfBirth = "2010-01-01",
                Gender = "F",
                IsCompliant = true,
                VaccineRecords = new List<VaccineRecord>
                {
                    new VaccineRecord { VaccineName = "MMR", Date = "2022-01-01", Status = "Compliant" },
                    new VaccineRecord { VaccineName = "DTP", Date = "2021-08-10", Status = "Pending" }
                }
            },
            new Student
            {
                Id = 2,
                FullName = "Carlos Pérez",
                SchoolId = "S124",
                DateOfBirth = "2009-03-15",
                Gender = "M",
                IsCompliant = false,
                VaccineRecords = new List<VaccineRecord>
                {
                    new VaccineRecord { VaccineName = "MMR", Date = "2021-02-05", Status = "Not Compliant" }
                }
            }
        };

        searchResults = allStudents
            .Where(s => s.SchoolId.Contains(searchTerm, StringComparison.OrdinalIgnoreCase)
                     || s.FullName.Contains(searchTerm, StringComparison.OrdinalIgnoreCase))
            .ToList();
    }

    private void ShowDetails(Student student)
    {
        // Later you can navigate or open a modal with student history
        Console.WriteLine($"Viewing details for: {student.FullName}");
    }
}